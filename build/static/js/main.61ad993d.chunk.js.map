{"version":3,"sources":["components/FilterField.js","components/Notification.js","components/Numbers.js","components/AddField.js","services/persons.js","App.js","index.js"],"names":["FilterField","props","value","filterState","onChange","event","setFilterState","target","Notification","message","notificationType","className","Numbers","filteredList","map","person","name","number","id","_id","onClick","e","deleteFunction","AddField","onSubmit","addNew","newName","setNewName","newNumber","setNewNumber","type","baseUrl","omaApi","getAll","axios","get","create","newObject","post","update","put","deleteWithId","delete","App","useState","persons","setPersons","notificationForm","setNotification","useEffect","personService","then","response","data","showMessage","a","b","setTimeout","filter","toLowerCase","includes","preventDefault","window","confirm","find","catch","error","concat","personid","getAttribute","personname","parseInt","console","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61ad993d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterField = (props) => {\r\n    const handleFilterStateChange = (event) => {\r\n        props.setFilterState(event.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            filter shown with: <input \r\n            value={props.filterState}\r\n            onChange={handleFilterStateChange}/>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default FilterField\r\n","import React from 'react'\r\n\r\nconst Notification = ({message, notificationType}) => {\r\n    if (message === null) {\r\n        return null\r\n      }\r\n    \r\n      return (\r\n        <div className={(notificationType === 0) ? 'notification' : 'error'}>\r\n          {message}\r\n        </div>\r\n      )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst Numbers = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            <ul>\r\n            {props.filteredList.map (person => <li key={person.name}>{person.name} {person.number}<button id={person._id} name={person.name} onClick={(e) => props.deleteFunction(e)}>delete</button></li>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default Numbers\r\n","import React from 'react'\r\n\r\nconst AddField = (props) => {\r\n    const handleNameChange = (event) => {\r\n        props.setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n      props.setNewNumber(event.target.value)\r\n    }\r\n    return (\r\n    <div>\r\n        <h2>Add a new person</h2>\r\n        <form onSubmit={props.addNew}>\r\n            <div>\r\n                name: <input \r\n                value={props.newName}\r\n                onChange={handleNameChange}/>\r\n            </div>\r\n            <div>\r\n                number: <input \r\n                value={props.newNumber}\r\n                onChange={handleNumberChange}/>\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddField","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst deleteWithId = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst omaApi = {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    deleteWithId: deleteWithId\r\n}\r\n\r\nexport default omaApi\r\n","import React, { useEffect, useState } from 'react'\nimport FilterField from './components/FilterField'\nimport Notification from './components/Notification'\nimport Numbers from './components/Numbers'\nimport AddField from './components/AddField'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterState, setFilterState ] = useState('')\n  const [ notificationForm, setNotification ] = useState({\n    message : null,\n    notificationType : 0\n  })\n\n  /* Haetaan data tietokannasta frontendiin */\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n\n  /* Virheviestin näyttämiseen funktio */\n  const showMessage = (a, b) => {\n    setNotification({\n      ...notificationForm,\n      message : a,\n      notificationType : b\n    }\n    )\n    setTimeout(() => {\n      setNotification({\n        ...notificationForm,\n        message : null,\n        notificationType : 0})\n    }, 5000)\n  }\n\n  /* Add-painikkeen funktio */\n  const addNew = (event) => {\n    event.preventDefault()\n\n    persons.map(person => person.name).includes(newName)\n    ? window.confirm(`${newName}  is already on phonebook, replace the old number with a new?`)\n      ? personService /* Päivitetään henkilö */\n        .update(persons.find(person => person.name === newName).id, {name : newName, number : newNumber})\n        .then(response => {\n            setPersons(persons.map(person => person.name !== newName ? person : response.data))\n            showMessage(`Changes to ${newName} was made`, 0)\n        })\n        .catch(error => {\n          setPersons(persons.filter(person => person.name !== newName))\n          showMessage(`${newName} has already been removed from the server`, 1)\n        })\n        : showMessage(`No changes was made to ${newName}`, 0)\n    : personService /* Lisätään henkilö */\n      .create({name : newName, number : newNumber})\n      .then(response => {\n        setPersons(persons.concat({name : newName, number : newNumber, id : response.data.id}))\n        showMessage(`Added ${newName}`, 0)\n      })\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  /* Delete-painikkeen funktio */\n  const removeNumber = (e) => {\n    e.preventDefault()\n    try {\n      const personid = e.target.getAttribute(\"id\")\n      const personname = e.target.getAttribute(\"name\")\n\n      if (window.confirm(`Remove ${personname}?`)) {\n        setPersons(persons.filter(person => person.id !== parseInt(personid)))\n        personService.deleteWithId(personid)\n        showMessage(`${personname} was removed`, 0)\n      }\n      else {\n        showMessage(`No changes were made`, 0)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  \n  const filteredList = persons.filter(person => person.name.toLowerCase().includes(filterState))\n\n  return (\n    <div>\n      <Notification message={notificationForm.message} notificationType={notificationForm.notificationType}/>\n      <FilterField filterState={filterState} setFilterState={setFilterState} />\n      <AddField addNew={addNew} newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber}/>\n      <Numbers filteredList={filteredList} deleteFunction={removeNumber}/>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}